<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joe Miller</title>
    <link>http://joemiller.me/</link>
    <description>Recent content on Joe Miller</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jul 2019 07:50:48 -0700</lastBuildDate>
    
	<atom:link href="http://joemiller.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Project GPG key</title>
      <link>http://joemiller.me/2019/07/project-gpg-key/</link>
      <pubDate>Sat, 20 Jul 2019 07:50:48 -0700</pubDate>
      
      <guid>http://joemiller.me/2019/07/project-gpg-key/</guid>
      <description>Intro TODO: intro, rationale, link to the stackoverflow article that sparked the idea
Create the project master GPG key This guide assumes you have already created a personal GPG key. This is referred to as an &amp;ldquo;author key&amp;rdquo; in this guide and will be used to sign the project key, verifying your relationship to the project.
List current secret keys (-K /--list-secret-keys):
$ gpg --keyid-format long -K /Users/joe/.gnupg/pubring.kbx ----------------------------- sec rsa4096/ADC517A11EB0B309 2016-02-09 [SC] Key fingerprint = CF5C 5827 E7BD 7059 7992 8EC4 ADC5 17A1 1EB0 B309 uid [ultimate] Joe Miller &amp;lt;joemiller@keybase.</description>
    </item>
    
    <item>
      <title>Heroku log drains into Logstash</title>
      <link>http://joemiller.me/2014/01/heroku-log-drains-into-logstash/</link>
      <pubDate>Fri, 31 Jan 2014 11:45:58 -0800</pubDate>
      
      <guid>http://joemiller.me/2014/01/heroku-log-drains-into-logstash/</guid>
      <description>&lt;p&gt;The first and obvious option for shipping logs from a heroku app to Logstash is the &lt;a href=&#34;http://logstash.net/docs/1.3.3/inputs/heroku&#34;&gt;heroku input plugin&lt;/a&gt;. However, this requires installing the Heroku gem and deploying the login + password of a Heroku user to your Logstash server(s). At this time it seems that any user given permissions to an app on Heroku has full control. Not good when you just want to fetch logs. Heroku has added more granular permissions via OAuth but the Heroku gem does not support OAuth tokens yet.&lt;/p&gt;

&lt;p&gt;Fortunately there&amp;rsquo;s another option using Heroku&amp;rsquo;s log drain. Setting up a log drain from Heroku to Logstash is almost as simple as the Heroku input plugin but has the major advantage of not requiring any new users or passwords to be deployed on the Logstash server.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensu and Graphite, Part 2</title>
      <link>http://joemiller.me/2013/12/07/sensu-and-graphite-part-2/</link>
      <pubDate>Sat, 07 Dec 2013 18:55:11 -0800</pubDate>
      
      <guid>http://joemiller.me/2013/12/07/sensu-and-graphite-part-2/</guid>
      <description>&lt;p&gt;In a &lt;a href=&#34;http://joemiller.me/2012/02/02/sensu-and-graphite/&#34;&gt;previous post&lt;/a&gt; I described two methods for routing metrics generated by Sensu clients to Graphite:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use a &lt;code&gt;pipe&lt;/code&gt; handler to send metrics via TCP to graphite&lt;/li&gt;
&lt;li&gt;use Graphite&amp;rsquo;s AMQP (rabbitmq) support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Method #1 was simply described for completeness. It is not scalable and shouldn&amp;rsquo;t be used except for very small workloads. Pipe handlers involve a fork() by sensu-server for every metric received.&lt;/p&gt;

&lt;p&gt;At the time I recommended method #2 which was more efficient - Sensu would simply copy the metric from its own &lt;code&gt;results&lt;/code&gt; queue to another queue that Graphite would be listening on, since both Sensu and Graphite can talk to RabbitMQ.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dell OpenManage on Fedora 19</title>
      <link>http://joemiller.me/2013/10/09/dell-openmanage-on-fedora-19/</link>
      <pubDate>Wed, 09 Oct 2013 18:15:04 -0700</pubDate>
      
      <guid>http://joemiller.me/2013/10/09/dell-openmanage-on-fedora-19/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s how to get Dell OpenManage running on Fedora 19. It is a simple process but I could not find any up to date information on how to do it elsewhere.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensu Presentation from CentOS Dojo Phoenix</title>
      <link>http://joemiller.me/2013/06/01/sensu-presentation-from-centos-dojo-phoenix/</link>
      <pubDate>Sat, 01 Jun 2013 09:15:52 -0700</pubDate>
      
      <guid>http://joemiller.me/2013/06/01/sensu-presentation-from-centos-dojo-phoenix/</guid>
      <description>&lt;p&gt;I was invited to speak at CentOS Dojo in Phoenix, AZ recently (May 2013) about the Sensu monitoring framework. I wanted to do something a little bit different than past presentations and try to show some use cases that fit what Sensu can do rather than just do a basic introduction to Sensu.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Speeding up Vagrant with parallel provisioning</title>
      <link>http://joemiller.me/2012/04/26/speeding-up-vagrant-with-parallel-provisioning/</link>
      <pubDate>Thu, 26 Apr 2012 08:15:40 -0700</pubDate>
      
      <guid>http://joemiller.me/2012/04/26/speeding-up-vagrant-with-parallel-provisioning/</guid>
      <description>&lt;p&gt;Simple hack for speeding up vagrant provisions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensu handler sets</title>
      <link>http://joemiller.me/2012/02/27/sensu-handler-sets/</link>
      <pubDate>Mon, 27 Feb 2012 11:06:38 -0800</pubDate>
      
      <guid>http://joemiller.me/2012/02/27/sensu-handler-sets/</guid>
      <description>&lt;p&gt;In past articles we have covered some of basics of Sensu handlers. A nice feature we haven&amp;rsquo;t touched on yet is handler &amp;ldquo;sets&amp;rdquo;. Handler sets were added around v0.9.2 and can be quite useful for saving time when modifying your handler.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AMQPcat, a netcat-like tool for messaging fun</title>
      <link>http://joemiller.me/2012/02/08/amqpcat-a-netcat-like-tool-for-messaging-fun/</link>
      <pubDate>Wed, 08 Feb 2012 16:30:02 -0800</pubDate>
      
      <guid>http://joemiller.me/2012/02/08/amqpcat-a-netcat-like-tool-for-messaging-fun/</guid>
      <description>&lt;p&gt;If you have read &lt;a href=&#34;http://www.devco.net/&#34;&gt;@ripienaar&amp;rsquo;s&lt;/a&gt; excellent series of &lt;a href=&#34;http://www.devco.net/archives/2011/12/11/common-messaging-patterns-using-stomp.php&#34;&gt;articles&lt;/a&gt; on common messaging patterns you probably noticed a handy CLI tool for working with STOMP queues called &lt;code&gt;stompcat&lt;/code&gt;. I looked around for something similar for AMQP brokers but couldn&amp;rsquo;t find anything quite the same. There is &lt;a href=&#34;https://github.com/dougbarth/amqp-utils&#34;&gt;amqp-utils&lt;/a&gt; but I had some issues with these and the tools didn&amp;rsquo;t work quite like I was hoping. So I wrote &lt;code&gt;amqpcat&lt;/code&gt; with the idea of providing a similar tool to &lt;code&gt;stompcat&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Available on github and rubygems.org: &lt;a href=&#34;https://github.com/joemiller/amqpcat&#34;&gt;https://github.com/joemiller/amqpcat&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensu and Graphite</title>
      <link>http://joemiller.me/2012/02/02/sensu-and-graphite/</link>
      <pubDate>Thu, 02 Feb 2012 14:18:52 -0800</pubDate>
      
      <guid>http://joemiller.me/2012/02/02/sensu-and-graphite/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Updated December 7, 2013&lt;/strong&gt; : I no longer recommend using the approach described in this post. Please read &lt;a href=&#34;http://joemiller.me/2013/12/07/sensu-and-graphite-part-2/&#34; title=&#34;Sensu and Graphite, PartÂ 2&#34;&gt;Sensu and Graphite, Part 2&lt;/a&gt; instead.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Re-use Nagios plugins in Sensu for quick profit</title>
      <link>http://joemiller.me/2012/01/24/re-use-nagios-plugins-in-sensu-for-quick-profit/</link>
      <pubDate>Tue, 24 Jan 2012 19:22:17 -0800</pubDate>
      
      <guid>http://joemiller.me/2012/01/24/re-use-nagios-plugins-in-sensu-for-quick-profit/</guid>
      <description>&lt;p&gt;In my previous &lt;a href=&#34;http://joemiller.me/2012/01/19/getting-started-with-the-sensu-monitoring-framework/&#34;&gt;article&lt;/a&gt; I mentioned a key strength of &lt;a href=&#34;https://github.com/sonian/sensu&#34;&gt;Sensu&lt;/a&gt; is the ability to re-use existing Nagios plugins. This is a powerful feature of Sensu. Nagios has been around for at least 1000 years according to most recent archaeological discoveries, which means a vast amount of human effort (and capital) has gone into creating Nagios plugins. Being able to leverage this prior effort is a &lt;a href=&#34;http://www.youtube.com/watch?v=gS7KXhK3sro&#34;&gt;huge&lt;/a&gt; win. In this article I&amp;rsquo;ll demonstrate creating a Sensu check with the &lt;a href=&#34;http://nagiosplugins.org/man/check_http&#34;&gt;check_http&lt;/a&gt; Nagios plugin.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting started with the Sensu monitoring framework</title>
      <link>http://joemiller.me/2012/01/19/getting-started-with-the-sensu-monitoring-framework/</link>
      <pubDate>Thu, 19 Jan 2012 20:18:25 -0800</pubDate>
      
      <guid>http://joemiller.me/2012/01/19/getting-started-with-the-sensu-monitoring-framework/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;(5/15/2012) NOTE: This guide has been superseded by the official &amp;lsquo; &lt;a href=&#34;https://github.com/sensu/sensu/wiki/Install-Guide&#34; title=&#34;Install Guide&#34;&gt;Install Guide&lt;/a&gt;&amp;rsquo; doc on the Sensu wiki. The new process utilizes the simpler Omnibus-style Sensu packages and covers installation on Debian/Ubuntu platforms as well. Please use this guide instead of the instructions below.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Correlating Puppet changes to events in your infrastructure using graphite</title>
      <link>http://joemiller.me/2011/11/05/correlating-puppet-changes-to-events-in-your-infrastructure/</link>
      <pubDate>Sat, 05 Nov 2011 19:09:15 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/11/05/correlating-puppet-changes-to-events-in-your-infrastructure/</guid>
      <description>&lt;p&gt;Sometimes it is pretty obvious when Puppet changes something in your infrastructure and bad things happen in a big dramatic way. Other times it&amp;rsquo;s not so obvious. It can be invaluable to be able to correlate changes made by Puppet to other events happening in your infrastructure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>List of statsd server implementations</title>
      <link>http://joemiller.me/2011/09/21/list-of-statsd-server-implementations/</link>
      <pubDate>Wed, 21 Sep 2011 11:34:46 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/09/21/list-of-statsd-server-implementations/</guid>
      <description>&lt;p&gt;Statsd is a simple client/server mechanism from the folks at Etsy that allows operations and development teams to easily feed a variety of metrics into a Graphite system. For more info on statsd read the seminal blog article on Statsd &lt;a href=&#34;http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/&#34; title=&#34;Etsy: Measure Anything, Measure Everything&#34;&gt;&amp;ldquo;Measure Anything, Measure Everything&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>groovy-statsdclient</title>
      <link>http://joemiller.me/2011/06/29/groovy-statsdclient/</link>
      <pubDate>Wed, 29 Jun 2011 16:50:13 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/06/29/groovy-statsdclient/</guid>
      <description>&lt;p&gt;In an attempt to learn some Groovy and Gradle I wrote an implementation of a Statsd client in groovy. Â It&amp;rsquo;s similar to other statsd clients in other languages and supports the typical increment(), decrement(), and timing() methods.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>#monitoringsucks - but it doesn&#39;t have to</title>
      <link>http://joemiller.me/2011/06/06/monitoringsucks-grass-roots-effort-to-make-monitoring-better/</link>
      <pubDate>Mon, 06 Jun 2011 13:58:35 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/06/06/monitoringsucks-grass-roots-effort-to-make-monitoring-better/</guid>
      <description>&lt;p&gt;On May 26, 2011, &lt;a href=&#34;http://lusislog.blogspot.com/&#34; title=&#34;John Vincent&#34;&gt;John Vincent&lt;/a&gt;, aka &lt;a href=&#34;https://twitter.com/#!/lusis&#34; title=&#34;@lusis&#34;&gt;@lusis&lt;/a&gt;, started a conversation with a simple tweet that led to an hour-plus chat on IRC freenode between some very smart folks. Â The IRCÂ channel was supposed to go away after the chat was over but instead it has survived and is attracting more and more attention.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alternative skins for Skype 5 and 6 on Mac OSX</title>
      <link>http://joemiller.me/2011/05/24/alternative-skins-for-skype-5-on-mac-osx/</link>
      <pubDate>Tue, 24 May 2011 12:46:45 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/05/24/alternative-skins-for-skype-5-on-mac-osx/</guid>
      <description>&lt;p&gt;The consensus at this point is that Skype 5 on Mac OSX is ugly and wastes a ton of screen space for no good reason (all of this is true, btw.) But, you don&amp;rsquo;t have to live with the ugliness. Â It&amp;rsquo;s not widely known, but Skype 5 supports skins or &amp;ldquo;chatstyles&amp;rdquo;, which are constructed entirely in HTML/CSS/Javascript, so they&amp;rsquo;re easy to write and hack.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Charlie Sheen plugin for the Hudson/Jenkins CI Server</title>
      <link>http://joemiller.me/2011/04/26/charlie-sheen-plugin-for-hudson-jenkins/</link>
      <pubDate>Tue, 26 Apr 2011 16:51:03 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/04/26/charlie-sheen-plugin-for-hudson-jenkins/</guid>
      <description>&lt;p&gt;I built a Charlie Sheen &amp;ldquo;Persona&amp;rdquo; plugin for our Hudson continuous integration server at work, which is now available on my github page. Â If you&amp;rsquo;re familiar with the Chuck Norris plugin, then you know what this is all about.&lt;/p&gt;

&lt;p&gt;Add a little bit of Sheen-ius to your Hudson/Jenkins server!! Â Tiger blood is included. Â #winning&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kanbanops - new mailing list</title>
      <link>http://joemiller.me/2011/04/24/kanbanops-new-mailing-list/</link>
      <pubDate>Sun, 24 Apr 2011 21:10:45 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/04/24/kanbanops-new-mailing-list/</guid>
      <description>I am a fan of using Kanban boards to organize and visualize the work coming into an infrastructure team, but most of the Kanban resources on the internet are geared towards software development teams.
Recently, a new mailing list was started for the sole purpose of sharing Kanban experiences in operations teams. The list is appropriately named kanbanops and you can sign up, browse the archives, etc, over at yahoo groups:</description>
    </item>
    
    <item>
      <title>Collectd-Graphite plugin.  Bringing together two great tools</title>
      <link>http://joemiller.me/2011/04/14/collectd-graphite-plugin/</link>
      <pubDate>Thu, 14 Apr 2011 11:27:19 -0700</pubDate>
      
      <guid>http://joemiller.me/2011/04/14/collectd-graphite-plugin/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://collectd.org/&#34; title=&#34;collectd.org&#34;&gt;Collectd&lt;/a&gt; is a powerful tool for gathering metrics using its wide range of plugins, such as cpu, disk, load, memory, etc. Â But there is a lack of good frontend tools for visualizing the data collectd produces.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://graphite.wikidot.com/&#34; title=&#34;graphite&#34;&gt;Graphite&lt;/a&gt; is an amazingly powerful tool from Orbitz for visualizing metrics, but there is a lack of tools for gathering host-level stats and sending into graphite.&lt;/p&gt;

&lt;p&gt;It would be great if we could leverage the strengths of both tools.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Client support for Amazon S3 multipart uploads (files &gt;5GB)</title>
      <link>http://joemiller.me/2011/02/18/client-support-for-amazon-s3-multipart-uploads-files-5gb/</link>
      <pubDate>Fri, 18 Feb 2011 16:07:22 -0800</pubDate>
      
      <guid>http://joemiller.me/2011/02/18/client-support-for-amazon-s3-multipart-uploads-files-5gb/</guid>
      <description>&lt;p&gt;I recently had a need to upload a few large (11GB) files to S3 for offsite archive purposes. Amazon announced support for objects &amp;gt;5GB back in &lt;a href=&#34;http://aws.amazon.com/about-aws/whats-new/2010/11/10/Amazon-S3-Introducing-Multipart-Upload/&#34; title=&#34;http://aws.amazon.com/about-aws/whats-new/2010/11/10/Amazon-S3-Introducing-Multipart-Upload/&#34;&gt;November 2010&lt;/a&gt;, so I had assumed that most S3 clients and libraries had support for it already. Â I was wrong. Â It turns out that in order to support large files, you need to use the new &amp;ldquo;multipart upload&amp;rdquo; feature. Â What I found was that many S3 clients do not yet support multipart uploads.&lt;/p&gt;

&lt;p&gt;In case this helps save anyone else a few hours of time, here is a summary of what I found regarding multipart upload support in the various S3 clients:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Amazon Cloudfront Private Streaming CLI Tools</title>
      <link>http://joemiller.me/2011/01/31/amazon-cloudfront-private-streaming-tools/</link>
      <pubDate>Mon, 31 Jan 2011 17:34:13 -0800</pubDate>
      
      <guid>http://joemiller.me/2011/01/31/amazon-cloudfront-private-streaming-tools/</guid>
      <description>&lt;p&gt;Back in late 2010 I had a need to create a private Cloudfront streaming distribution but there was no simple way to do this. Amazon&amp;rsquo;s web-based AWS Management Console did not support this and I could not find any simple CLI tools for doing this.&lt;/p&gt;

&lt;p&gt;Luckily, RightScale&amp;rsquo;s &lt;em&gt;right_aws&lt;/em&gt; ruby gem (&amp;gt;= 2.0.0) provides support for the Cloudfront private streaming API.&lt;/p&gt;

&lt;p&gt;These tools should make it simple for any linux admin or developer to get started with creating a private streaming distribution on Amazon.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dns_compare.py - testing DNS servers</title>
      <link>http://joemiller.me/2010/12/22/dns_compare-py-testing-dns-servers/</link>
      <pubDate>Wed, 22 Dec 2010 19:53:20 -0800</pubDate>
      
      <guid>http://joemiller.me/2010/12/22/dns_compare-py-testing-dns-servers/</guid>
      <description>Sometimes it might be nice to be able to test a DNS server&amp;rsquo;s output, such as with a continuous monitoring system, or as a validation tool when migrating to a different DNS server (or service.)
$ dns_compare.py -z example.com --file example.com.zone --server 10.1.1.1 ....X...X..done Results: Matches: 9 Mis-matches: 2 To see more examples or download the code, goto: https://github.com/joemiller/dns_compare</description>
    </item>
    
    <item>
      <title>gitosis-ng â Simple, self-service git repositories</title>
      <link>http://joemiller.me/2010/09/27/gitosis-ng-%e2%80%93-simple-self-service-git-repositories/</link>
      <pubDate>Mon, 27 Sep 2010 15:46:37 -0700</pubDate>
      
      <guid>http://joemiller.me/2010/09/27/gitosis-ng-%e2%80%93-simple-self-service-git-repositories/</guid>
      <description>&lt;p&gt;Gitosis-ng &amp;ndash; it&amp;rsquo;s gitosis with some new features to help users work with the git server. Mainly implemented with commands sent via ssh, ex:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shellcmd-agent - Execute any shell command in parallel on multiple machines with mcollective</title>
      <link>http://joemiller.me/2010/09/27/shellcmd-agent-execute-any-shell-command-in-parallel-on-multiple-machines-with-mcollective/</link>
      <pubDate>Mon, 27 Sep 2010 14:33:59 -0700</pubDate>
      
      <guid>http://joemiller.me/2010/09/27/shellcmd-agent-execute-any-shell-command-in-parallel-on-multiple-machines-with-mcollective/</guid>
      <description>&lt;p&gt;Use mc-shellcmd to run any command on the nodes in your collective, eg:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simulate network latency, packet loss, and low bandwidth on Mac OSX</title>
      <link>http://joemiller.me/2010/08/31/simulate-network-latency-packet-loss-and-bandwidth-on-mac-osx/</link>
      <pubDate>Tue, 31 Aug 2010 16:40:48 -0700</pubDate>
      
      <guid>http://joemiller.me/2010/08/31/simulate-network-latency-packet-loss-and-bandwidth-on-mac-osx/</guid>
      <description>&lt;p&gt;Sometimes while testing you may want to be able to simulate network latency, or packet loss, or low bandwidth. I have done this with Linux andÂ  &lt;a href=&#34;http://www.linuxfoundation.org/collaborate/workgroups/networking/netem&#34; title=&#34;tc/netem&#34;&gt;tc/netem&lt;/a&gt; as well asÂ with Shunra on Windows, but I had never done it on Mac OSX.&lt;/p&gt;

&lt;p&gt;It turns out that Mac OSX includes &amp;lsquo;dummynet&amp;rsquo; from FreeBSD which has the capability to do this WAN simulation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Free IPv4 &#43; IPv6 DNS hosting</title>
      <link>http://joemiller.me/2010/06/29/free-ipv4-ipv6-dns-hosting/</link>
      <pubDate>Tue, 29 Jun 2010 17:24:30 -0700</pubDate>
      
      <guid>http://joemiller.me/2010/06/29/free-ipv4-ipv6-dns-hosting/</guid>
      <description>&lt;p&gt;I have been a big fan of &lt;a href=&#34;http://tunnelbroker.net/&#34; title=&#34;tunnelbroker.net&#34;&gt;TunnelBroker.net&lt;/a&gt;&amp;rsquo;s IPv6 tunneling service for a number of years now, but I was pleasantly surprised to discover a new service from TunnelBroker.net (HE - Hurrican Electric) &amp;ndash; &lt;a href=&#34;https://dns.he.net/&#34; title=&#34;free ipv6 dns hosting&#34;&gt;IPv6 DNS hosting&lt;/a&gt;! Â Actually it&amp;rsquo;s dual-stack DNS hosting, allowing you to serve DNS requests for your domains to both the IPv4 and IPv6 internet.&lt;/p&gt;

&lt;p&gt;It is currently in &amp;ldquo;open beta&amp;rdquo; status and available to anyone with a (free) ipv6 tunnelbroker.net account, or if you happen to be a customer of the parent company providing this service, &lt;a href=&#34;http://he.net&#34; title=&#34;hurricane electric&#34;&gt;HE&lt;/a&gt; (Hurricane Electric.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>New writer modules for BIND-DLZ&#39;s DNS Performance Testing Tools</title>
      <link>http://joemiller.me/2010/06/21/bind-dlz-new-writers/</link>
      <pubDate>Mon, 21 Jun 2010 19:56:55 -0700</pubDate>
      
      <guid>http://joemiller.me/2010/06/21/bind-dlz-new-writers/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://bind-dlz.sourceforge.net/&#34; title=&#34;BIND-DLZ&#34;&gt;BIND-DLZ&lt;/a&gt; project publishes an excellent set of performance testing &lt;a href=&#34;http://bind-dlz.sourceforge.net/perf_tools.html&#34; title=&#34;bind-dlz performance testing tools&#34;&gt;tools&lt;/a&gt;which make it easy to generate a lot of fake DNS data for a variety of DNS server types.&lt;/p&gt;

&lt;p&gt;I have extended this excellent tool set by creating a few new &amp;ldquo;writer&amp;rdquo; modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;contrib::writers::mydns::file&lt;/li&gt;
&lt;li&gt;contrib::writers::powerdns::xdb&lt;/li&gt;
&lt;li&gt;contrib::writers::powerdns::sqlite3&lt;/li&gt;
&lt;li&gt;contrib::writers::powerdns::gmysql&lt;/li&gt;
&lt;li&gt;contrib::writers::windowsdns::file&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>RRDTool module for PHP</title>
      <link>http://joemiller.me/2010/06/20/rrdtool-module-for-php/</link>
      <pubDate>Sun, 20 Jun 2010 20:53:39 -0700</pubDate>
      
      <guid>http://joemiller.me/2010/06/20/rrdtool-module-for-php/</guid>
      <description>&lt;p&gt;This is a module for php4 that I wrote a very long time ago that provides access to the rrdtool C library to php scripts.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>